//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ManagementService.UtilityServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://localhost/UtilityServices", ConfigurationName="UtilityServices.UtilityServiceSoap")]
    public interface UtilityServiceSoap {
        
        // CODEGEN: Generating message contract since element name fromCurrency from namespace http://localhost/UtilityServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/UtilityServices/ConvertCurrency", ReplyAction="*")]
        ManagementService.UtilityServices.ConvertCurrencyResponse ConvertCurrency(ManagementService.UtilityServices.ConvertCurrencyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/UtilityServices/ConvertCurrency", ReplyAction="*")]
        System.Threading.Tasks.Task<ManagementService.UtilityServices.ConvertCurrencyResponse> ConvertCurrencyAsync(ManagementService.UtilityServices.ConvertCurrencyRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ConvertCurrencyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ConvertCurrency", Namespace="http://localhost/UtilityServices", Order=0)]
        public ManagementService.UtilityServices.ConvertCurrencyRequestBody Body;
        
        public ConvertCurrencyRequest() {
        }
        
        public ConvertCurrencyRequest(ManagementService.UtilityServices.ConvertCurrencyRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://localhost/UtilityServices")]
    public partial class ConvertCurrencyRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public double amount;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string fromCurrency;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string toCurrency;
        
        public ConvertCurrencyRequestBody() {
        }
        
        public ConvertCurrencyRequestBody(double amount, string fromCurrency, string toCurrency) {
            this.amount = amount;
            this.fromCurrency = fromCurrency;
            this.toCurrency = toCurrency;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ConvertCurrencyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ConvertCurrencyResponse", Namespace="http://localhost/UtilityServices", Order=0)]
        public ManagementService.UtilityServices.ConvertCurrencyResponseBody Body;
        
        public ConvertCurrencyResponse() {
        }
        
        public ConvertCurrencyResponse(ManagementService.UtilityServices.ConvertCurrencyResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://localhost/UtilityServices")]
    public partial class ConvertCurrencyResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public double ConvertCurrencyResult;
        
        public ConvertCurrencyResponseBody() {
        }
        
        public ConvertCurrencyResponseBody(double ConvertCurrencyResult) {
            this.ConvertCurrencyResult = ConvertCurrencyResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface UtilityServiceSoapChannel : ManagementService.UtilityServices.UtilityServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UtilityServiceSoapClient : System.ServiceModel.ClientBase<ManagementService.UtilityServices.UtilityServiceSoap>, ManagementService.UtilityServices.UtilityServiceSoap {
        
        public UtilityServiceSoapClient() {
        }
        
        public UtilityServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UtilityServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UtilityServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UtilityServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ManagementService.UtilityServices.ConvertCurrencyResponse ManagementService.UtilityServices.UtilityServiceSoap.ConvertCurrency(ManagementService.UtilityServices.ConvertCurrencyRequest request) {
            return base.Channel.ConvertCurrency(request);
        }
        
        public double ConvertCurrency(double amount, string fromCurrency, string toCurrency) {
            ManagementService.UtilityServices.ConvertCurrencyRequest inValue = new ManagementService.UtilityServices.ConvertCurrencyRequest();
            inValue.Body = new ManagementService.UtilityServices.ConvertCurrencyRequestBody();
            inValue.Body.amount = amount;
            inValue.Body.fromCurrency = fromCurrency;
            inValue.Body.toCurrency = toCurrency;
            ManagementService.UtilityServices.ConvertCurrencyResponse retVal = ((ManagementService.UtilityServices.UtilityServiceSoap)(this)).ConvertCurrency(inValue);
            return retVal.Body.ConvertCurrencyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ManagementService.UtilityServices.ConvertCurrencyResponse> ManagementService.UtilityServices.UtilityServiceSoap.ConvertCurrencyAsync(ManagementService.UtilityServices.ConvertCurrencyRequest request) {
            return base.Channel.ConvertCurrencyAsync(request);
        }
        
        public System.Threading.Tasks.Task<ManagementService.UtilityServices.ConvertCurrencyResponse> ConvertCurrencyAsync(double amount, string fromCurrency, string toCurrency) {
            ManagementService.UtilityServices.ConvertCurrencyRequest inValue = new ManagementService.UtilityServices.ConvertCurrencyRequest();
            inValue.Body = new ManagementService.UtilityServices.ConvertCurrencyRequestBody();
            inValue.Body.amount = amount;
            inValue.Body.fromCurrency = fromCurrency;
            inValue.Body.toCurrency = toCurrency;
            return ((ManagementService.UtilityServices.UtilityServiceSoap)(this)).ConvertCurrencyAsync(inValue);
        }
    }
}
